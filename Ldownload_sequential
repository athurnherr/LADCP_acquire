#!/usr/bin/expect -f
#======================================================================
#                    L D O W N L O A D _ S E Q U E N T I A L 
#                    doc: Sun Mar  7 16:18:07 2021
#                    dlm: Wed Mar 31 06:27:11 2021
#                    (c) 2021 A.M. Thurnherr
#                    uE-Info: 83 30 NIL 0 0 72 2 2 4 NIL ofnI
#======================================================================

# HISTORY:
#	Mar 22, 2021: - created
#	Mar 31, 2021: - BUG: profnum 036 was interpreted as octal
#				  - added support for linked data files

source [regsub {Ldir} [exec which Ldir] {libacquire2.expect}];

log_user 0;
init_acquire;

if {![file isfile .last_LADCP]} {							# get LADCP profile id
	error ".last_LADCP: no such file or directory"; 
}
set profnum [scan [exec cat .last_LADCP] %d];
send_user "LADCP profile number = $profnum\n";

set cast_dir [format %s/%03d $DATA_DIRECTORY $profnum];		# sanity check
if {![file isdirectory $cast_dir]} {
	send_error "ABORT: data directory $cast_dir does not exist; correct .last_LADCP to proceed\n";
	exit 1;
}
	
send_user "Connecting...";									# wake up instruments
connect_to_instruments;
wakeup_instruments;

list_dir;													# erase memory if needed/requested
if {$memory_empty} {
	set cid -1;
	error "No data in either instrument!";
}

if {[llength [glob -nocomplain [format {%s/*.[0-9][0-9][0-9]} $cast_dir]]] > 0} {
	set attempt 1;
	while {[file isdirectory [format %s/saved_data_%d $cast_dir $attempt]]} {
	    set attempt [expr $attempt + 1];
	}
	set saved_dir [format %s/saved_data_%d $cast_dir $attempt];
	send_user "\nMoving existing data files to $saved_dir..."
	exec mkdir $saved_dir;
	exec sh -c "mv [format {%s/*.[0-9][0-9][0-9]} $cast_dir] $saved_dir";
}

shutdown_secondary;											# wake up later
	
send_user "\nDownloading Data...";							# download data

if {[regexp {^/dev/} $PRIMARY_COMMS]} {						# TRDI
	select_instrument 0;
	start_download_TRDI;
	wait4_download_finish_TRDI;
} else {													# Nortek
	select_instrument 0;
	download_Nortek $PRIMARY_COMMS;
}

shutdown_primary;

if {[info exists SECONDARY_COMMS]} {
	wakeup_secondary;
	if {[regexp {^/dev/} $SECONDARY_COMMS]} { 				# TRDI
		select_instrument 1;
		start_download_TRDI;
		wait4_download_finish_TRDI;
	} else {												# Nortek
		select_instrument 1;
		download_Nortek $SECONDARY_COMMS;
	}
	shutdown_secondary;
}

set_color;
send_user "\nBacking up data files...";
backup_data $cast_dir $profnum;

send_user "\nDone\n";

